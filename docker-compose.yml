services:
  diana-proxy:
    build:
      context: ./diana-proxy
      dockerfile: Dockerfile
    container_name: diana-proxy
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - PORT=4000
      - RIOT_API_KEY=${RIOT_API_KEY:API_KEY}
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:admin@postgres:5432/diana}
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:4000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - diana-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      - POSTGRES_DB=diana
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d diana"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - diana-network

volumes:
  postgres_data:

networks:
  diana-network:
    driver: bridge
